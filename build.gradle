buildscript {

  // this can come out once we release this plugin properly
  repositories {
    maven {
      url "http://atlanta.sonalake.corp:8081/nexus/content/groups/public"
      allowInsecureProtocol = true
    }
  }
  dependencies {
    classpath 'io.github.swagger2markup:swagger2markup-gradle-plugin:1.3.3'
    classpath 'com.sonalake:swagger-changelog:1.1.1-SNAPSHOT'
    classpath 'com.google.guava:guava:20.0'
  }
}


plugins {
  id 'org.springframework.boot' version '2.2.6.RELEASE'
  id 'io.spring.dependency-management' version '1.0.9.RELEASE'
  id "io.freefair.lombok" version "4.1.6"
  id 'java'

  id("org.asciidoctor.jvm.convert") version "3.2.0"
  id("org.asciidoctor.jvm.pdf") version "3.2.0"

  id 'maven-publish'
  id "org.datlowe.maven-publish-auth" version "2.0.2"


}

apply plugin: 'io.github.swagger2markup'
apply plugin: 'sonalake.ApiChangelog'


group = 'com.sonalake'
version = '0.0.2-SNAPSHOT'
sourceCompatibility = '11'

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  mavenCentral()
}


ext {
  asciiDocOutputDir = file("${buildDir}/asciidoc/generated")
  swaggerOutputDir = file("${buildDir}/swagger")
  snippetsOutputDir = file("${buildDir}/generated-snippets")
}


dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'io.springfox:springfox-swagger2:2.9.2'
  implementation 'io.springfox:springfox-swagger-ui:2.9.2'

  testImplementation('org.springframework.boot:spring-boot-starter-test') {
    exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
  }


  testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc:2.0.4.RELEASE'
  testImplementation 'capital.scalable:spring-auto-restdocs-core:2.0.8'
}

test {
  systemProperties = System.properties
  systemProperty 'sg.api.version', version

  useJUnitPlatform()
}


// for docs
convertSwagger2markup {
  dependsOn test
  swaggerInput "${swaggerOutputDir}/swagger.json"
  outputDir asciiDocOutputDir
  config = [
    'swagger2markup.pathsGroupedBy'                          : 'TAGS',
    'swagger2markup.extensions.springRestDocs.snippetBaseUri': snippetsOutputDir.getAbsolutePath()
  ]
}


swaggerChangeLog {
  groupId = "${rootProject.group}"
  artifactId = "${rootProject.name}-API"

  // where to find the nexus repo
  nexusHome = 'http://atlanta.sonalake.corp:8081/nexus'

  // where to store the changelog
  targetdir = "${buildDir}/asciidoc/generated/changelog"

  snapshotVersionFile = "${buildDir}/swagger/swagger.json"
}

// create a PDF from the asciidoc
asciidoctorPdf {
  dependsOn convertSwagger2markup
  dependsOn generateChangeLog

  baseDirFollowsSourceDir()

  sources {
    include 'api-guide.adoc'
  }
  attributes = [
    doctype        : 'book',
    toc            : 'left',
    toclevels      : '3',
    numbered       : '',
    sectlinks      : '',
    sectanchors    : '',
    hardbreaks     : '',
    generated      : '../../../build/asciidoc/generated',
    resources      : '../../../src/main/resources',
    snippets       : '../../../build/generated-snippets',
    changes        : '../../../build/asciidoc/generated/changelog',
    imagesdir      : 'theme',
    'pdf-stylesdir': 'theme',
    'pdf-style'    : 'simple-theme.yml',
    revnumber      : version
  ]
}


publishing {
  publications {
    swaggerPublication(MavenPublication) {
      artifact "build/swagger/swagger.json"
      pom {
        description = 'The API guide for the autodoc project'
        artifactId = "${rootProject.name}-API"
        packaging = "json"
      }
    }

    apiGuidePublication(MavenPublication) {
      artifact "build/docs/asciidocPdf/api-guide.pdf"
      pom {
        description = 'The API guide for the autodoc project'
        artifactId = "${rootProject.name}-APIDOC"
        packaging = "pdf"
      }
    }
  }
  repositories {
    maven {
      def rootUrl = "http://atlanta.sonalake.corp:8081/nexus/content/repositories"
      name = version.endsWith("SNAPSHOT") ? 'snapshots' : 'releases'
      url "$rootUrl/$name"
    }
  }
}
tasks.withType(PublishToMavenRepository) { it.dependsOn asciidoctorPdf }
